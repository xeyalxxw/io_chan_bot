import telebot
import big_answers
import const

from datetime import datetime
from pygame import mixer

"""
print('–ó–≤—É–∫ –Ω-–Ω–∞–¥–∞? (y/n)')
input_sound = input()
if input_sound == "y":
    sound = True
    print("–ó–≤—É–∫ –µ—Å—Ç—å")
elif input_sound == "n":
    sound = False
    print("–ó–≤—É–∫–∞ –Ω–µ—Ç")
else:
    sound = False
    print("–ó–≤—É–∫–∞ –Ω–µ—Ç—É...")
print("______________________________________________________________________\n\n")
"""
sound = False

bot = telebot.TeleBot(const.token)

bot.send_message(const.main_chat_id, "–Ø –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å!")

mixer.init()
mixer.music.load('sound.mp3')


# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
def log(message, answer):
    if sound:
        mixer.music.play()

    print('\n{0} {1} {2} ({3}): {4}'.format(str(datetime.now())[:-7],
                                            message.from_user.first_name,
                                            message.from_user.last_name,
                                            str(message.from_user.id),
                                            message.text))
    print("–û—Ç–≤–µ—Ç: " + answer)


@bot.message_handler(commands=['stop_oi', 'start'])
def handle_text(message):
    user_id = message.from_user.id

    # /stop_oi
    if message.text == "/stop_oi":
        if user_id == const.admin_id:

            bot.send_message(message.chat.id,
                             "–Ø –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞... –•–æ–∑—è–∏–Ω, —Ç–æ–ª—å–∫–æ —Ç—ã –∑–∞–ø—É—Å—Ç–∏ –º–µ–Ω—è –ø–æ—Å–∫–æ—Ä–µ–µ! üòº")
            print("\n" + str(datetime.now()) + " –•–æ–∑—è–∏–Ω –æ—Å—Ç–∞–Ω–æ–≤–∏–ª –º–µ–Ω—è (/stop_oi)")
            exit()
        else:
            answer = "–¢—ã –º–Ω–µ –Ω–µ —Ö–æ–∑—è–∏–Ω!"
            bot.send_message(message.chat.id, answer)
            log(message, answer)

    # /start
    if message.text == "/start":
        if user_id == const.admin_id:
            answer = "–û–ø—è—Ç—å –¥–≤–∞–¥—Ü–∞—Ç—å –ø—è—Ç—å! –ó–∞–º—É—á–∞–ª –¥–µ–≤–∫—É! üòæ"
            bot.send_message(message.chat.id, answer)
            log(message, answer)
        else:
            answer = big_answers.start_answer
            bot.send_message(message.chat.id, answer)
            answer = "*–î–ª–∏–∏–∏–∏–Ω–Ω–∞—è –ø–∞—Å—Ç–∞ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start*"
            log(message, answer)


@bot.message_handler(content_types=["sticker"])
def handle_docs_s(message):
    answer = (
        "ID —ç—Ç–æ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞:\n{0}\n–°–º–∞–π–ª —ç—Ç–æ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞: {1}\n–†–∞–∑–º–µ—Ä —ç—Ç–æ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞: {2} –ö–ë–∞–π—Ç".format(
            str(message.sticker.file_id),
            message.sticker.emoji,
            (str(message.sticker.file_size/8192))[:4]))
    bot.send_message(message.chat.id, answer)
    message.text = "–°—Ç–∏–∫–µ—Ä"
    log(message, answer)


@bot.message_handler(content_types=["text"])
def handle_text(message):
    # –°–æ–∑–¥–∞—é –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –∫–æ—Ä–æ—Ç–∫–∏–º –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π —Ä–∞–∑ –Ω–µ –ø–∏—Å–∞—Ç—å –æ–≥—Ä–æ–º–Ω—ã–µ —Å—Ç–æ–∫–æ–≤—ã–µ.
    user_id = message.from_user.id
    txt = message.text.lower()

    if user_id == const.admin_id:

        # –°—Ä–∞–≤–Ω–∏–≤–∞—é —Å str.lower() –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –±—ã–ª–∏
        # –∑–∞–≤–∏—Å–∏–º—ã –æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞, –∏ –∫–æ–¥ –Ω–µ –ø–æ–ª—É—á–∏–ª—Å—è —Ç–∞–∫–∏–º –≥—Ä–æ–º–æ–∑–¥–∫–∏–º.
        # --------------------------------------------------------------------- Admin's messages.

        if txt == "–ü—Ä–∏–≤–µ—Ç".lower():
            answer = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –•–æ–∑—è–∏–Ω!"
        elif txt == '–û–∏'.lower():
            answer = "–î–∞, —Ö–æ–∑—è–∏–Ω? üò∏"
        elif txt == '–û–∏—á–∫–∞'.lower():
            answer = "–ú—É—Ä! üò∏"
        elif txt == '–ü–∏–∑–¥–∞'.lower():
            answer = "–ú–Ω–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –∫–æ–≥–¥–∞ —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å —Ç–∞–∫–∏–µ —Å–ª–æ–≤–∞, –±–∞–∫–∞! üòæ"
        else:
            answer = "–ù–µ –ø–æ–Ω–∏–º–∞—Ç—å... üòø"

            # --------------------------------------------------------------------- User's messages

    else:
        if txt.lower() == '–ü—Ä–∏–≤–µ—Ç':
            answer = "–ü–∏—Å—é –Ω–∞ –æ–±–µ–¥! üòº"
        elif message.text == '/start':
            answer = big_answers.start_answer
        elif txt == '/start'.lower():
            answer = big_answers.start_answer
        elif txt == '–û–∏'.lower():
            answer = "–ú?"
        elif txt == '–û–∏—á–∫–∞'.lower():
            answer = "–ú—É—Ä! üò∏"
        elif txt == '–ü–∏–∑–¥–∞'.lower():
            answer = "–ú–Ω–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –∫–æ–≥–¥–∞ —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å —Ç–∞–∫–∏–µ —Å–ª–æ–≤–∞, –±–∞–∫–∞! üòø"
        else:
            answer = "–ù–µ –ø–æ–Ω–∏–º–∞—Ç—å... üòø"

    # –¢—É—Ç –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —é–∑–µ—Ä–∞ –∏ –ª–æ–≥–∏—Ä—É–µ—Ç –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–≤–æ–π –æ—Ç–≤–µ—Ç.
    bot.send_message(message.chat.id, answer)
    log(message, answer)


# –¢—É—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–æ—Å—ã–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞ Telegram –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
bot.remove_webhook()
bot.polling(none_stop=True, interval=0)
